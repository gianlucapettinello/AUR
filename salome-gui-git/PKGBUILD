# Maintainer: Maurizio D'Addona <mauritiusdadd@gmail.com>
# Contributor: Xyne

# http://git.salome-platform.org/gitweb/

_modulename="gui"

_gitname="${_modulename}"
_gitbranch="V7_6_BR"
#_gitbranch="master"

_basename="salome-${_modulename}"

pkgname="salome-${_modulename}-git"
pkgver=7.6.0b1.r6.g57167b9
pkgrel=1
pkgdesc="Generic platform for Pre and Post-Processing for numerical simulation (gui module)"
url="http://www.salome-platform.org"
depends=('salome-kernel-git' 'qwt' 'opencascade' 'python2-pyqt4' 'paraview-salome-git')
optdepends=('salome-geom-git')
makedepends=('git' 'doxygen' 'python2-sphinx' 'python2-docutils')
options=(!strip staticlibs emptydirs libtool docs)
arch=('i686' 'x86_64')
conflicts=('salome-gui')
provides=('salome-gui')
license=('(L)GPL')

source=("${pkgname}::git://git.salome-platform.org/modules/${_gitname}.git#branch=${_gitbranch}"
        "gui-pyqtconfig.patch")

sha256sums=('SKIP'
            'd9df8a716479939be4b6f8da3447e34b52ca633d576e6faa557c68908a910ddb')

_prefix="/opt/salome-platform/${_modulename}"
_builddir="${pkgname}/build"

pkgver()
{
    cd "${srcdir}/${pkgname}"
    git describe --long --tags | sed -r 's/([^-]*-g)/r\1/;s/-/./g;s/^[vV]//g;s/_main_/./g;s/_/./g'
    #printf "%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare()
{
  rm -rf "${srcdir}/${_builddir}"
  mkdir -p "${srcdir}/${_builddir}"

  cd "${srcdir}/${pkgname}"

  for _pathc_file in $(find ${srcdir} -maxdepth 1 -name "*.patch"); do
      msg2 "Applying patch $(basename ${_pathc_file})"
      patch -p0 -f -l -s -i ${_pathc_file} || true
  done

  msg "Patching for python2 interpreter 1/2..."
  find . -type f \
    -execdir /usr/bin/sed\
      -e "s|#![ ]*/usr/bin/env python$|#!/usr/bin/env python2|g"\
      -e "s|#![ ]*/usr/bin/env python[ ]|#!/usr/bin/env python2 |g"\
      -i "{}"\
  \;

  msg "Patching for python2 interpreter 2/2..."
  for _prog in "python" "sphinx-build" "sphinx-apidoc"; do
      find . -type f -not  \(\
        -name "*.h"   -or\
        -name "*.hxx" -or\
        -name "*.hpp" -or\
        -name "*.hh"  -or\
        -name "*.c"   -or\
        -name "*.cxx" -or\
        -name "*.cpp" -or\
        -name "*.cc"  -or\
        -name "*.txt" \)\
        -execdir /usr/bin/sed\
          -e "s/^${_prog}$/${_prog}2/g"\
          -e "s/^${_prog} /${_prog}2 /g"\
          -e "s/\([ =]\)${_prog} /\1${_prog}2 /g"i\
          -i "{}"\
        \;
  done
}

build()
{
  cd "${srcdir}/${_builddir}"

  # NOTE: we should use -DCMAKE_INSTALL_PREFIX="${_prefix}"
  #       but there is a bug in cmake_install.cmake that forces
  #       us to use -DCMAKE_INSTALL_PREFIX="${pkgdir}/${_prefix}"
  #       and then fix the hardcoded paths in the package function.

  source /etc/profile.d/salome-kernel.sh

  _flags="-fPIC $(pkg-config --libs --cflags QtNetwork)"

  cmake "${srcdir}/${pkgname}" \
    -Wno-dev\
    -DPREFIX=${_prefix} \
    -DCMAKE_INSTALL_PREFIX="${pkgdir}/${_prefix}" \
    -DCMAKE_C_COMPILER=mpicc \
    -DCMAKE_CXX_COMPILER=mpicxx \
    -DCMAKE_C_FLAGS="${CFLAGS} ${_flags} -D_DEFAULT_SOURCE"\
    -DCMAKE_CXX_FLAGS="${CXXFLAGS} ${_flags} -D_DEFAULT_SOURCE"\
    -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 \
    -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DSPHINX_EXECUTABLE=/usr/bin/sphinx-build2 \
    -DPYQT_PYUIC_EXECUTABLE=/usr/bin/python2-pyuic4 \
    -DPYQT_PYRCC_EXECUTABLE=/usr/bin/pyrcc4 \
    -DOMNIORBPY_ROOT_DIR=/usr/lib/python2.7/site-packages/omniORB \
    -DBOOST_ROOT_DIR=/usr \
    -DPYQT4_ROOT_DIR=/usr \
    -DPARAVIEW_ROOT_DIR=/usr \
    -DVTK_ROOT_DIR=/usr/lib/cmake/paraview \
    -DQWT_ROOT_DIR=/usr \
    -DQWT_LIBRARY="/usr/lib/qwt/libqwt.so" \
    -DCAS_ROOT_DIR=/opt/opencascade \
    -DQT4_ROOT_DIR=/usr \
    -DOPENGL_ROOT_DIR=/usr \
    -DCAS_INCLUDE_DIRS=/opt/opencascade/inc \
    -DSALOME_USE_PLOT2DVIEWER=ON \
    -DSALOME_USE_VTKVIEWER=ON \
    -DSALOME_USE_PVVIEWER=ON\
    -DSALOME_BUILD_DOC=ON \
    -DSALOME_BUILD_TESTS=ON \
    -DSALOME_USE_MPI=ON \
    -DSALOME_CMAKE_DEBUG=OFF \
    -DCMAKE_BUILD_TYPE='Release'

  make ${MAKEFLAGS}

  msg "Generating environment variables..."

  echo "export GUI_ROOT_DIR=${_prefix}" > ${_basename}.sh
  echo "export PATH=\${PATH}:${_prefix}/bin/salome" >> ${_basename}.sh
  echo "export PYTHONPATH=\${GUI_ROOT_DIR}/lib/python2.7/site-packages/salome:\${PYTHONPATH}" >> ${_basename}.sh
  echo "${_prefix}/lib/" > ${_basename}.conf
  echo "${_prefix}/lib/salome" >> ${_basename}.conf

}

package()
{
  #needed to correctly loading modules during installation process
  _pythondir="${pkgdir}/${_prefix}/lib/python2.7/site-packages/salome"
  mkdir -p "${_pythondir}/salome"
  touch "${_pythondir}/salome/__init__.py"
  export PYTHONPATH="${_pythondir}"
  source /etc/profile.d/salome-kernel.sh  
  cd "${srcdir}/${_builddir}"

  # NOTE: DESTDIR="${pkgdir}" does not work correctly!
  make install

  install -Dm755 "./${_basename}.sh" "${pkgdir}/etc/profile.d/${_basename}.sh"
  install -Dm755 "./${_basename}.conf" "${pkgdir}/etc/ld.so.conf.d/${_basename}.conf"

  mv -f "${pkgdir}/${_prefix}/bin/salome/VERSION" "${pkgdir}/${_prefix}/bin/salome/VERSION-${_basename}"

  # Add missing __init__.py file to ensure that the modules are detected.
  find "$pkgdir/${_prefix}/lib/python2.7/site-packages/salome" -type d -exec touch '{}'/__init__.py \;

  #replacing the annoying hardcoded paths...
  msg "Fixing hardcoded paths..."
  find ${pkgdir} \
    -type f \( \
      -name "*.py" -o  \
      -name "*.txt" -o \
      -name "*.cmake"  \
    \) \
    -execdir /usr/bin/sed \
      -e "s|${srcdir}/${_builddir}|${_prefix}|g" \
      -e "s|${srcdir}|${_prefix}|g" \
      -e "s|${pkgdir}|${_prefix}|g" \
      -i '{}' \
  \;
}
